(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{673:function(t,a,s){"use strict";s.r(a);var e=s(1),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("img",{attrs:{src:"https://mybatis.org/images/mybatis-logo.png",alt:"",loading:"lazy"}})]),t._v(" "),s("h1",{attrs:{id:"什么是-mybatis-官方文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-mybatis-官方文档"}},[t._v("#")]),t._v(" 什么是 MyBatis？"),s("a",{attrs:{href:"https://mybatis.net.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("MyBatis 是一款优秀的持久层框架，它支持自定义 SQL、存储过程以及高级映射。MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。")]),t._v(" "),s("h1",{attrs:{id:"重构mybatis博客"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重构mybatis博客"}},[t._v("#")]),t._v(" 重构Mybatis博客")]),t._v(" "),s("p",[t._v("最早使用Mybatis是在2016年,那时候学习只会用,根本不知道什么原理,不懂的原理的地方只能死记。搭建一个小的demo放到github,工作需要的时候就直接复制黏贴,虽然也能满足工作需要但是总感觉到不带劲。在找到工作后大概2017年时候就对Mybatis的源码进行了阅读，其实相对于Dubbo,Spring,之类的源码Mybatis的源码还是非常简单的,现在也经常推荐给刚开始学习看源码的同学。\n早在2019年小编就开始写Mybatis的博客了,那时候博客主要还是自己学习为主,现在回头看看,感觉有些粗糙。这里准备回炉重造一波。将原博客进行优化。对Mybaits的核心功能，核心处理类重新重构下博客。")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/lxchinesszz/mybatis-opensource-example",target:"_blank",rel:"noopener noreferrer"}},[s("img",{attrs:{src:"https://img.shields.io/badge/源码阅读-mybatis--opensource--example-green",alt:"",loading:"lazy"}}),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);